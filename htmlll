<!doctype html>
<html lang="id">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Contoh SPA - Navigasi (GitHub Pages Friendly)</title>
  <style>
    :root{--bg:#0f1724;--card:#0b1220;--muted:#94a3b8;--accent:#60a5fa}
    *{box-sizing:border-box}
    body{margin:0;font-family:Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial;background:linear-gradient(180deg,#071122 0%,#071733 100%);color:#e6eef8;min-height:100vh;display:flex;flex-direction:column}
    header{display:flex;align-items:center;justify-content:space-between;padding:14px 20px;background:rgba(255,255,255,0.02);backdrop-filter:blur(6px)}
    .brand{font-weight:700;letter-spacing:0.4px}
    nav a{color:var(--muted);text-decoration:none;margin:0 8px;font-weight:600}
    nav a.active{color:var(--accent)}
    main{flex:1;padding:28px;max-width:960px;margin:0 auto;width:100%}
    .card{background:linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));padding:18px;border-radius:12px;box-shadow:0 6px 24px rgba(2,6,23,0.6)}
    h1{margin:0 0 8px 0}
    p.lead{color:var(--muted);margin-top:0}
    .controls{display:flex;gap:8px;margin-top:14px}
    .btn{padding:8px 12px;border-radius:8px;border:1px solid rgba(255,255,255,0.06);background:transparent;color:inherit;cursor:pointer}
    .btn.primary{background:linear-gradient(90deg,#3b82f6,#06b6d4);color:#04202a;border:none}
    footer{padding:12px 20px;text-align:center;color:var(--muted);font-size:14px}

    /* simple page transition */
    .view{opacity:0;transform:translateY(8px);transition:all .28s ease;display:none}
    .view.active{display:block;opacity:1;transform:none}

    /* responsive */
    @media (max-width:640px){header{flex-direction:column;align-items:flex-start}nav{margin-top:8px}}
  </style>
</head>
<body>
  <header>
    <div class="brand">My GitHub Pages SPA</div>
    <nav>
      <a href="#/" data-link="/" class="navlink">Home</a>
      <a href="#/about" data-link="/about" class="navlink">About</a>
      <a href="#/projects" data-link="/projects" class="navlink">Projects</a>
      <a href="#/contact" data-link="/contact" class="navlink">Contact</a>
    </nav>
  </header>

  <main>
    <section id="home" class="view card" data-route="/">
      <h1>Selamat datang!</h1>
      <p class="lead">Ini contoh single-page app (SPA) sederhana yang menggunakan hash routing sehingga aman dipasang di GitHub Pages. Klik menu atau gunakan tombol "Selanjutnya" / "Sebelumnya" untuk berpindah.</p>
      <div class="controls">
        <button class="btn" id="prevBtn">⟨ Sebelumnya</button>
        <button class="btn primary" id="nextBtn">Selanjutnya ⟩</button>
      </div>
    </section>

    <section id="about" class="view card" data-route="/about">
      <h1>Tentang</h1>
      <p class="lead">Halaman ini berisi deskripsi singkat. Pada GitHub Pages, file ini dapat diletakkan di repository dan langsung diakses sebagai halaman statis.</p>
      <div class="controls">
        <button class="btn" id="prevBtn2">⟨ Sebelumnya</button>
        <button class="btn primary" id="nextBtn2">Selanjutnya ⟩</button>
      </div>
    </section>

    <section id="projects" class="view card" data-route="/projects">
      <h1>Project</h1>
      <p class="lead">Contoh daftar project. Tombol di bawah memudahkan pindah antar-halaman.</p>
      <ul>
        <li>Project A — Demo</li>
        <li>Project B — Demo</li>
        <li>Project C — Demo</li>
      </ul>
      <div class="controls">
        <button class="btn" id="prevBtn3">⟨ Sebelumnya</button>
        <button class="btn primary" id="nextBtn3">Selanjutnya ⟩</button>
      </div>
    </section>

    <section id="contact" class="view card" data-route="/contact">
      <h1>Kontak</h1>
      <p class="lead">Email: nama@domain.tld<br/>Instagram: @contoh</p>
      <div class="controls">
        <button class="btn" id="prevBtn4">⟨ Sebelumnya</button>
        <button class="btn primary" id="nextBtn4">Selanjutnya ⟩</button>
      </div>
    </section>
  </main>

  <footer>Built for GitHub Pages • Hash routing (#/path) — cocok untuk repositori statis</footer>

  <script>
    // simple hash-based router and previous/next navigation
    const routes = ['/', '/about', '/projects', '/contact'];
    const routeToId = {'/':'home','/about':'about','/projects':'projects','/contact':'contact'};

    function setActiveRoute(path){
      if(!routes.includes(path)) path = '/';
      // update views
      document.querySelectorAll('.view').forEach(v=>v.classList.remove('active'));
      const id = routeToId[path];
      document.getElementById(id).classList.add('active');
      // update nav link styles
      document.querySelectorAll('.navlink').forEach(a=>a.classList.remove('active'));
      const link = document.querySelector(`a[data-link='${path}']`);
      if(link) link.classList.add('active');
      // update hash if necessary
      const desiredHash = '#'+path;
      if(location.hash !== desiredHash) location.hash = desiredHash;
    }

    function onHashChanged(){
      const raw = location.hash || '#/';
      const path = raw.replace('#','');
      setActiveRoute(path);
    }

    window.addEventListener('hashchange', onHashChanged);

    // init
    if(!location.hash) location.hash = '#/';
    onHashChanged();

    // previous/next button wiring
    function goToIndex(i){
      const idx = (i + routes.length) % routes.length;
      setActiveRoute(routes[idx]);
    }

    // find index of current route
    function currentIndex(){
      const raw = location.hash || '#/';
      const path = raw.replace('#','');
      return routes.indexOf(path);
    }

    // wire all .btn controls with role prev/next based on their container
    document.querySelectorAll('.view').forEach((view, i)=>{
      const prev = view.querySelector('.btn');
      const next = view.querySelector('.btn.primary');
      if(prev) prev.addEventListener('click', ()=> goToIndex(i-1));
      if(next) next.addEventListener('click', ()=> goToIndex(i+1));
    });

    // also allow left/right arrows
    window.addEventListener('keydown', (e)=>{
      if(e.key === 'ArrowLeft') goToIndex(currentIndex()-1);
      if(e.key === 'ArrowRight') goToIndex(currentIndex()+1);
    });

    // accessibility: allow clicking nav to set route without page jump
    document.querySelectorAll('a[data-link]').forEach(a=>{
      a.addEventListener('click', (ev)=>{
        ev.preventDefault();
        const path = a.getAttribute('data-link');
        setActiveRoute(path);
      });
    });
  </script>
</body>
</html>
