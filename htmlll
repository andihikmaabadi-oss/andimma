<!doctype html>
<html lang="id">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Web Content Viewer — Lihat konten web</title>
  <style>
    :root{--bg:#0f1724;--card:#0b1220;--muted:#9aa4b2;--accent:#3b82f6}
    html,body{height:100%;margin:0;font-family:Inter,ui-sans-serif,system-ui,-apple-system,'Segoe UI',Roboto,'Helvetica Neue',Arial}
    body{background:linear-gradient(180deg,#071226 0%, #07182a 100%);color:#e6eef6}
    .app{max-width:1100px;margin:28px auto;padding:18px}
    header{display:flex;gap:12px;align-items:center}
    h1{font-size:18px;margin:0}
    .controls{display:flex;gap:8px;margin-top:12px}
    input[type=text]{flex:1;padding:10px;border-radius:8px;border:1px solid rgba(255,255,255,0.06);background:rgba(255,255,255,0.02);color:inherit}
    button{padding:10px 12px;border-radius:8px;border:0;background:var(--accent);color:#fff;cursor:pointer}
    .secondary{background:transparent;border:1px solid rgba(255,255,255,0.06)}
    .panels{display:grid;grid-template-columns:1fr 360px;gap:12px;margin-top:12px}
    .card{background:var(--card);border-radius:12px;padding:12px;box-shadow:0 6px 20px rgba(2,6,23,0.6)}
    iframe{width:100%;height:600px;border-radius:8px;border:1px solid rgba(255,255,255,0.04)}
    .meta{font-size:13px;color:var(--muted);margin-top:8px}
    .bookmarks{display:flex;flex-direction:column;gap:8px}
    .bm{padding:8px;border-radius:8px;background:rgba(255,255,255,0.02);cursor:pointer}
    .tiny{font-size:12px;color:var(--muted)}
    .modes{display:flex;gap:6px}
    .note{margin-top:8px;font-size:13px;color:#ffdca8;background:linear-gradient(90deg,#43321b22,#43321b11);padding:8px;border-radius:8px}
    footer{margin-top:12px;font-size:13px;color:var(--muted)}
  </style>
</head>
<body>
  <div class="app">
    <header>
      <div>
        <h1>Web Content Viewer</h1>
        <div class="tiny">Masukkan URL lalu tekan "Tampilkan" untuk melihat halaman dalam iframe atau coba ekstrak konten (tergantung CORS).</div>
      </div>
    </header>

    <div class="controls">
      <input id="urlInput" type="text" placeholder="https://example.com — masukkan URL situs yang ingin dilihat" value="https://example.com">
      <button id="showBtn">Tampilkan</button>
      <button id="extractBtn" class="secondary">Coba Ekstrak Konten</button>
      <button id="youtubeBtn" class="secondary">Embed YouTube</button>
    </div>

    <div class="panels">
      <div class="card">
        <div style="display:flex;justify-content:space-between;align-items:center">
          <div>
            <strong>Preview</strong>
            <div class="tiny">Gunakan mode "Mobile" untuk melihat tampilan responsif.</div>
          </div>
          <div class="modes">
            <select id="deviceSelect">
              <option value="desktop">Desktop</option>
              <option value="mobile">Mobile (375×667)</option>
            </select>
          </div>
        </div>

        <div id="frameWrap" style="margin-top:12px">
          <iframe id="previewFrame" srcdoc="<p style=\"font-family:Inter,Arial; padding:20px\">Tidak ada preview. Masukkan URL lalu tekan Tampilkan.</p>"></iframe>
        </div>

        <div class="meta" id="metaInfo"></div>

        <div class="note" id="corsNote">Catatan: Beberapa situs mencegah pemuatan dalam iframe (X-Frame-Options) atau memblokir fetch karena CORS. Jika preview blank atau ekstraksi gagal, coba gunakan server proxy CORS atau jalankan file ini di server yang Anda kontrol.</div>
      </div>

      <aside class="card">
        <strong>Bookmarks & Tools</strong>
        <div class="bookmarks" id="bookmarks" style="margin-top:8px">
          <!-- bookmarks go here -->
        </div>

        <div style="margin-top:12px">
          <button id="saveBmBtn" class="secondary">Simpan Bookmark Saat Ini</button>
          <div style="height:8px"></div>
          <button id="clearBmBtn" class="secondary">Hapus Semua Bookmark</button>
        </div>

        <hr style="border:none;height:8px">
        <div class="tiny"><strong>Tips:</strong>
          <ul>
            <li>Untuk menampilkan halaman yang memblokir iframe, gunakan <em>embed</em> publik (YouTube, Vimeo) atau server proxy.</li>
            <li>Fungsi ekstrak mencoba mengambil tag &lt;title&gt; dan konten &lt;meta property="og:description"&gt; via fetch.</li>
            <li>Jika ingin menyematkan konten Anda sendiri (artikel, gambar), Anda dapat menyimpan HTML di folder lokal dan membuka file ini dari server lokal.</li>
          </ul>
        </div>
      </aside>
    </div>

    <footer>
      <div class="tiny">Created with ❤️ — Masih sederhana tapi bisa dikembangkan: tambahkan proxy, integrasi RSS, atau server-side rendering untuk ekstraksi lebih andal.</div>
    </footer>
  </div>

  <script>
    const urlInput = document.getElementById('urlInput');
    const showBtn = document.getElementById('showBtn');
    const extractBtn = document.getElementById('extractBtn');
    const youtubeBtn = document.getElementById('youtubeBtn');
    const frame = document.getElementById('previewFrame');
    const metaInfo = document.getElementById('metaInfo');
    const deviceSelect = document.getElementById('deviceSelect');
    const bookmarksEl = document.getElementById('bookmarks');
    const saveBmBtn = document.getElementById('saveBmBtn');
    const clearBmBtn = document.getElementById('clearBmBtn');

    // load bookmarks from localStorage
    let bookmarks = JSON.parse(localStorage.getItem('wc_bookmarks') || '[]');
    function renderBookmarks(){
      bookmarksEl.innerHTML = '';
      if(bookmarks.length===0){ bookmarksEl.innerHTML = '<div class="tiny">(Belum ada bookmark)</div>'; return }
      bookmarks.forEach((b, i)=>{
        const el = document.createElement('div'); el.className='bm'; el.innerHTML = `<div style="font-weight:600">${b.title||b.url}</div><div class="tiny">${b.url}</div>`;
        el.onclick = ()=>{ urlInput.value = b.url; showPreview(); }
        const del = document.createElement('button'); del.textContent='Hapus'; del.style.float='right'; del.onclick = (ev)=>{ ev.stopPropagation(); bookmarks.splice(i,1); saveBookmarks(); renderBookmarks(); }
        el.appendChild(del);
        bookmarksEl.appendChild(el);
      })
    }
    function saveBookmarks(){ localStorage.setItem('wc_bookmarks', JSON.stringify(bookmarks)); }
    renderBookmarks();

    function setFrameSize(){
      const wrap = document.getElementById('frameWrap');
      if(deviceSelect.value==='mobile'){
        frame.style.width='375px'; frame.style.height='667px'; frame.style.margin='0 auto';
      } else { frame.style.width='100%'; frame.style.height='600px'; frame.style.margin='0'; }
    }
    deviceSelect.addEventListener('change', setFrameSize);

    function showPreview(){
      const url = urlInput.value.trim();
      if(!url) return alert('Masukkan URL dulu.');
      // normalize
      const u = url.match(/^https?:\/\//) ? url : 'https://' + url;
      frame.src = u; // try load directly into iframe
      metaInfo.textContent = 'Memuat...';
      // try fetch & parse for title/og (may fail due to CORS)
      fetch(u).then(r=>r.text()).then(txt=>{
        const parser = new DOMParser();
        const doc = parser.parseFromString(txt, 'text/html');
        const title = doc.querySelector('title') ? doc.querySelector('title').innerText : '';
        const og = doc.querySelector('meta[property="og:description"]') ? doc.querySelector('meta[property="og:description"]').content : (doc.querySelector('meta[name="description"]') ? doc.querySelector('meta[name="description"]').content : '—');
        metaInfo.innerHTML = `<div><strong>${title || '(tanpa title)'}</strong></div><div class="tiny">${og}</div>`;
      }).catch(err=>{
        metaInfo.innerHTML = '<div class="tiny">Gagal ekstrak konten via fetch (kemungkinan CORS). Untuk ekstraksi andal, jalankan server proxy atau gunakan layanan server-side.</div>';
      })
      setFrameSize();
    }

    showBtn.addEventListener('click', showPreview);

    extractBtn.addEventListener('click', ()=>{
      const url = urlInput.value.trim(); if(!url) return alert('Masukkan URL dulu.');
      const u = url.match(/^https?:\/\//) ? url : 'https://' + url;
      metaInfo.textContent = 'Mencoba ekstrak konten via fetch...';
      fetch(u).then(r=>r.text()).then(txt=>{
        const parser = new DOMParser(); const doc = parser.parseFromString(txt,'text/html');
        // naive article extraction: get first <article> or longest <p> block
        let article = doc.querySelector('article');
        if(!article){
          const ps = Array.from(doc.querySelectorAll('p'));
          ps.sort((a,b)=>b.innerText.length - a.innerText.length);
          article = ps[0] || null;
        }
        if(article){
          const out = article.innerText.trim().slice(0,2000);
          metaInfo.innerHTML = `<div><strong>Hasil ekstraksi (potongan):</strong></div><div style="margin-top:8px">${out.replace(/\n/g,'<br>')}</div>`;
        } else metaInfo.textContent = 'Tidak ditemukan konten artikel.';
      }).catch(err=>{
        metaInfo.innerHTML = '<div class="tiny">Ekstraksi gagal (CORS atau jaringan). Gunakan server-side proxy atau layanan ekstraksi untuk bypass CORS.</div>';
      })
    });

    youtubeBtn.addEventListener('click', ()=>{
      const v = prompt('Masukkan ID video YouTube atau URL (contoh: dQw4w9WgXcQ):');
      if(!v) return;
      let id = v;
      try{ const m = v.match(/(?:v=|youtu\.be\/|\/embed\/)([A-Za-z0-9_-]{11})/); if(m) id = m[1]; }
      catch(e){}
      const embed = `https://www.youtube.com/embed/${id}`;
      frame.src = embed;
      metaInfo.innerHTML = `<div class="tiny">Embed YouTube: ${id}</div>`;
      setFrameSize();
    });

    saveBmBtn.addEventListener('click', ()=>{
      const url = urlInput.value.trim(); if(!url) return alert('Masukkan URL dulu.');
      const u = url.match(/^https?:\/\//) ? url : 'https://' + url;
      // try get title quickly
      fetch(u).then(r=>r.text()).then(txt=>{
        const parser = new DOMParser(); const doc = parser.parseFromString(txt,'text/html');
        const title = doc.querySelector('title') ? doc.querySelector('title').innerText : u;
        bookmarks.unshift({url:u,title}); if(bookmarks.length>25) bookmarks.pop(); saveBookmarks(); renderBookmarks();
      }).catch(err=>{
        bookmarks.unshift({url:u,title:u}); saveBookmarks(); renderBookmarks();
      })
    });

    clearBmBtn.addEventListener('click', ()=>{ if(confirm('Hapus semua bookmark?')){ bookmarks=[]; saveBookmarks(); renderBookmarks(); } });

  </script>
</body>
</html>
